<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 * @Class Name : Member_SQL.xml
 * @Description : Member_SQL
 * @Modification Information
 * @
 * @  수정일      수정자              수정내용
 * @
 * @ 2022.01.26  hsk3807          최초생성
 *
 * @author 개발팀
 * @since 2022 . 01. 26
 * @version 1.0
 * @see
 * @see
 *
 *  Copyright (C) by FRO All right reserved.
 -->
<mapper namespace="memberMapper">
    <!--
     * 로그인.로그인 페이지
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <select id="memberLogin" parameterType="com.pumpkin.melon.mng.member.service.MemberMngVO" resultType="egovMap">
        /* memberMapper.memberLogin */
        <![CDATA[
        SELECT seq        AS seq,
               pw         AS pw,
               id         AS id,
               name       AS name,
               hp         AS hp,
               email      AS email,
               type       AS type,
               pol        AS pol,
               pri        AS pri,
               etc        AS etc,
               status     AS status,
               lock_count AS lockCount,
               reg_date   AS regDate,
               sessionkey AS sessionkey,
               enableyn   AS enableyn
        FROM PMKN_MEMBER and status = 'OK'
        WHERE id = #{id}
        ]]>
    </select>

    <!--
     * 회원아이디 기준 회원 비밀번호 조회
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <select id="memberSpCisLoginInfoSelect" parameterType="com.pumpkin.melon.mng.member.service.MemberMngVO"
            resultType="egovMap">
        /* memberMapper.memberSpCisLoginInfoSelect */
        <![CDATA[
        select a.seq      AS seq
             , a.id       AS id
             , a.pw       AS pw
             , a.name     AS name
             , a.email    AS email
             , a.hp       AS hp
             , a.type     AS type
             , a.enableyn AS enableyn
             , etc        as etc
        FROM PMKN_MEMBER a
        WHERE 1 = 1
          and a.status = 'OK'
          AND a.id = #{id}
        ]]>
    </select>

    <!--
     * 사용자가 입력한 비밀번호를 DB에서 SHA256으로 암호화
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <select id="memberSpGetSha256Password" parameterType="com.pumpkin.melon.mng.member.service.MemberMngVO"
            statementType="CALLABLE" resultType="string">
        /* memberMapper.memberSpGetSha256Password */
        <![CDATA[
        CALL SP_GET_SHA256_PASSWORD( #{id},
            #{pw},
            #{encodePassWd})
        ]]>
    </select>


    <!--
     * 암호화된 임시 비밀번호 저장
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <update id="memberUpdatePassword" parameterType="com.pumpkin.melon.mng.member.service.MemberMngVO">
        /* memberMapper.memberUpdatePassword */
        UPDATE PMKN_MEMBER
        SET pw = #{passWd}
        WHERE id = #{id}
    </update>

    <!--
     * 비밀번호 변경 히스토리 등록
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <insert id="memberInsertPasswordHistory" parameterType="com.pumpkin.melon.mng.member.service.MemberMngVO">
        /* memberMapper.memberInsertPasswordHistory */
        INSERT INTO CIS_USERPASSWORDHISTORY
        (id,
         TYPE,
         REGISTUSER,
         REGISTDATETIME)
        VALUES (#{id},
                '4',
                #{id},
                Getdate())
    </insert>

    <!--
     * 로그인.비밀번호 찾기 이메일 내용 조회
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <select id="memberfindPasswordEmailForm" parameterType="egovMap" resultType="egovMap">
        /* memberMapper.memberfindPasswordEmailForm */
        <![CDATA[
        SELECT *
        FROM CIS_NOTICEEMAILSETTINGS
        WHERE CODE = '0003'
          AND USEYN = 'Y'
        ]]>
    </select>


    <!--
     * 자유게시판.비밀번호변경.비밀번호변경 화면
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <select id="memberChangePasswordForm" parameterType="com.pumpkin.melon.mng.member.service.MemberMngVO"
            resultType="egovMap">
        /* memberMapper.memberChangePasswordForm */
        <![CDATA[


		]]>
    </select>

    <!--
     * 로그인 히스토리 등록
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <insert id="memberInsertLoginHistory" parameterType="com.pumpkin.melon.mng.member.service.MemberMngVO"
            keyProperty="seq"
            useGeneratedKeys="true">
        /* memberMapper.memberInsertLoginHistory */
        INSERT INTO CIS_LoginHistory
            (id, REMOTEADDRESS, STATUS, REGISTDATETIME)
        VALUES (#{id}, #{remoteAddress}, #{status}, getdate())
    </insert>

    <!--
     * 로그인 실패 히스토리 카운트 조회
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <select id="memberLoginFailHistoryCnt" parameterType="com.pumpkin.melon.mng.member.service.MemberMngVO"
            resultType="int">
        /* memberMapper.memberLoginFailHistoryCnt */
        <![CDATA[
        SELECT NVL(CAST(lock_count AS INTEGER), 0) AS lockCount
        FROM PMKN_MEMBER
        WHERE id = #{id}
        ]]>
    </select>

    <!--
     * 로그인 5회이상 실패 시 계졍 사용중지
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <update id="memberUpdateEnableYn" parameterType="com.pumpkin.melon.mng.member.service.MemberMngVO">
        /* memberMapper.memberUpdateEnableYn */
        UPDATE PMKN_MEMBER
        SET ENABLEYN = #{enableyn}
        WHERE UM_ID = #{id}
    </update>

    <!--
     * 로그인 실패 히스토리 등록
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <insert id="memberInsertLoginFailHistory" parameterType="com.pumpkin.melon.mng.member.service.MemberMngVO"
            keyProperty="loginHistorySeq" useGeneratedKeys="true">
        /* memberMapper.memberInsertLoginFailHistory */
        UPDATE PMKN_MEMBER
        SET lock_count = NVL(lock_count, 0) + 1
        WHERE 1 = 1
          AND id = #{id}
    </insert>

    <!--
     * 로그인 실패 기록 삭제
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <delete id="memberDeleteLoginFailHistory" parameterType="com.pumpkin.melon.mng.member.service.MemberMngVO">
        /* memberMapper.memberDeleteLoginFailHistory */
        UPDATE PMKN_MEMBER
        SET lock_count = 0
        WHERE id = #{id}
    </delete>

    <!--
     * 로그인 상태정보 저장
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <insert id="memberInsertLoginStatus" parameterType="com.pumpkin.melon.mng.member.service.MemberMngVO">
        /* memberMapper.memberInsertLoginStatus */
        INSERT INTO CIS_LOGINSTATUS
            (id, LOGINHISTORYSEQ)
        VALUES (#{id}, #{loginHistorySeq})
    </insert>


    <!--
     * 개인정보변경 조회
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <select id="memberInfo" parameterType="com.pumpkin.melon.mng.member.service.MemberMngVO" resultType="egovMap">
        /* memberMapper.memberInfo */
        <![CDATA[
        SELECT seq                          as seq
             , id                           as id
             , password                     as password
             , name                         as name
             , email                        as email
             , telno                        as telNo
             , registno                     as registNo
             , department                   as department
             , (SELECT Name
                FROM CIS_UserAgencyDepartment
                WHERE USEYN = 'y'
                  AND TYPE = 'p'
                  and code = ta.department) as departmentName
             , representativename           as representativeName
             , type
        FROM CIS_User ta
        WHERE ID = #{id}
        ]]>
    </select>


    <!--
     * 개인정보변경 수정
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <update id="updateUser" parameterType="com.pumpkin.melon.mng.member.service.MemberMngVO">
        /* memberMapper.updateUser */
        UPDATE CIS_User
        SET Name               = #{name},
            Email              = #{email},
            TelNo              = #{telno},
            Department         = #{department},
            RepresentativeName = #{representativename},
            UpdateUser         = #{id},
            UpdateDatetime     = getdate()
        WHERE Seq = #{seq}
    </update>

    <!--
     * 개인정보변경 대리점 수기등록
     * @param vo - memberVO
     * @return data[memberVO]
     * @exception Exception
     -->
    <insert id="insertDepartment" parameterType="com.pumpkin.melon.mng.member.service.MemberMngVO">
        /* memberMapper.insertDepartment */
        INSERT INTO CIS_UserAgencyDepartment
        (Code,
         TYPE,
         Name,
         UseYn,
         REGISTUSER,
         REGISTDATETIME,
         UpdateUser,
         UpdateDatetime)
        VALUES (#{department},
                'p',
                #{departmentName},
                'y',
                #{id},
                Getdate(),
                #{id},
                Getdate())
    </insert>
</mapper>
